#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã XP –¥–ª—è CV
"""

import asyncio
import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞ –≤ Python path
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))

from sqlalchemy.ext.asyncio import create_async_engine, AsyncSession
from src.config import settings

async def test_cv_xp_system():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–∏—Å—Ç–µ–º—É XP –¥–ª—è CV"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã XP –¥–ª—è CV...")
    
    engine = create_async_engine(
        settings.db_url.get_secret_value(),
        echo=False
    )
    
    try:
        async with AsyncSession(engine) as session:
            from uuid import uuid4
            from src.modules.cv.routes import calculate_cv_update_xp
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞—Å—á–µ—Ç XP –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–æ–ª–µ–π
            test_cases = [
                # –ü—Ä–æ—Å—Ç—ã–µ –ø–æ–ª—è
                {"age": 25},
                {"comments": "–û—Ç–ª–∏—á–Ω—ã–π –∫–∞–Ω–¥–∏–¥–∞—Ç"},
                
                # –°—Ä–µ–¥–Ω–∏–µ –ø–æ–ª—è
                {"languages": '["English", "Russian"]'},
                {"department": "IT"},
                
                # –í–∞–∂–Ω—ã–µ –ø–æ–ª—è
                {"skills": '["Python", "FastAPI", "SQL"]'},
                {"education": '{"degree": "Bachelor", "university": "MSU"}'},
                {"jobs": '[{"company": "Tech Corp", "position": "Developer"}]'},
                
                # –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–ª—è (—Å –±–æ–Ω—É—Å–æ–º)
                {
                    "skills": '["Python", "FastAPI"]',
                    "experience_years": 3,
                    "education": '{"degree": "Bachelor"}',
                    "languages": '["English"]',
                    "department": "IT"
                },
                
                # –ú–Ω–æ–≥–æ –ø–æ–ª–µ–π (–±–æ–ª—å—à–∏–π –±–æ–Ω—É—Å)
                {
                    "skills": '["Python"]',
                    "experience_years": 5,
                    "education": '{"degree": "Master"}',
                    "jobs": '[{"company": "ABC"}]',
                    "languages": '["English", "German"]',
                    "department": "Engineering",
                    "age": 30,
                    "comments": "Great candidate"
                }
            ]
            
            print("\nüìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ XP –∑–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è CV:")
            for i, fields in enumerate(test_cases, 1):
                xp = calculate_cv_update_xp(fields)
                field_names = list(fields.keys())
                print(f"   {i}. –ü–æ–ª—è: {field_names}")
                print(f"      XP: {xp}")
                print()
            
            print("‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—á–µ—Ç–∞ XP –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É XP –∑–Ω–∞—á–µ–Ω–∏–π
            print("\nüí∞ –¢–∞–±–ª–∏—Ü–∞ XP –∑–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø–æ–ª—è CV:")
            from src.modules.cv.routes import CV_FIELD_XP_VALUES
            for field, xp in sorted(CV_FIELD_XP_VALUES.items(), key=lambda x: x[1], reverse=True):
                print(f"   {field:20} -> {xp} XP")
            
            print(f"\nüéØ –ë–æ–Ω—É—Å—ã –∑–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:")
            print(f"   3+ –ø–æ–ª–µ–π -> +2 XP")
            print(f"   5+ –ø–æ–ª–µ–π -> +5 XP")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        raise
    finally:
        await engine.dispose()
    
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã!")

if __name__ == "__main__":
    asyncio.run(test_cv_xp_system())
