#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL –∏ —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö t1
"""

import asyncio
import asyncpg
from src.config import settings


async def check_postgres_connection():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ PostgreSQL –∏ —Å–æ–∑–¥–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö t1 –µ—Å–ª–∏ –Ω—É–∂–Ω–æ"""
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏–∑ URL
    db_url = settings.db_url.get_secret_value()
    
    # –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ postgres
    postgres_url = db_url.replace("/t1", "/postgres")
    
    try:
        # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ postgres –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        conn = await asyncpg.connect(postgres_url.replace("postgresql+asyncpg://", "postgresql://"))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö t1
        result = await conn.fetchval(
            "SELECT 1 FROM pg_database WHERE datname = 't1'"
        )
        
        if not result:
            print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö t1 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞–µ–º...")
            await conn.execute("CREATE DATABASE t1")
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö t1 —Å–æ–∑–¥–∞–Ω–∞!")
        else:
            print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö t1 —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        await conn.close()
        
        # –¢–µ–ø–µ—Ä—å –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ t1
        t1_conn = await asyncpg.connect(db_url.replace("postgresql+asyncpg://", "postgresql://"))
        print("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö t1 —É—Å–ø–µ—à–Ω–æ!")
        await t1_conn.close()
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ PostgreSQL: {e}")
        print("\n–£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:")
        print("1. PostgreSQL –∑–∞–ø—É—â–µ–Ω")
        print("2. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å 'postgres' —Å –ø–∞—Ä–æ–ª–µ–º 'postgres' —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        print("3. –î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à–µ–Ω —Å localhost")
        return False


if __name__ == "__main__":
    success = asyncio.run(check_postgres_connection())
    if success:
        print("\nüéâ PostgreSQL –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
    else:
        print("\nüí° –ü–æ–¥—Å–∫–∞–∑–∫–∞: –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ PostgreSQL –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Docker:")
        print("docker run --name postgres-t1 -e POSTGRES_PASSWORD=postgres -p 5432:5432 -d postgres:15")
