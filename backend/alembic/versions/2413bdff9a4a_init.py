"""init

Revision ID: 2413bdff9a4a
Revises: 
Create Date: 2025-09-19 14:26:53.480157

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import sqlalchemy.dialects.postgresql as postgres


# revision identifiers, used by Alembic.
revision: str = '2413bdff9a4a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('email', sqlmodel.AutoString(length=255), nullable=False),
    sa.Column('password_hash', sqlmodel.AutoString(length=255), nullable=False),
    sa.Column('full_name', sqlmodel.AutoString(length=255), nullable=False),
    sa.Column('role', postgres.ENUM('USER', 'HR', 'ADMIN', name='userrole', create_type=False), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('cvs',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('filename', sqlmodel.AutoString(length=255), nullable=False),
    sa.Column('original_filename', sqlmodel.AutoString(length=255), nullable=False),
    sa.Column('file_path', sqlmodel.AutoString(length=500), nullable=False),
    sa.Column('file_size', sa.Integer(), nullable=False),
    sa.Column('content_type', sqlmodel.AutoString(length=100), nullable=False),
    sa.Column('uploaded_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('parsed_text', sqlmodel.AutoString(), nullable=True),
    sa.Column('skills', sqlmodel.AutoString(), nullable=True),
    sa.Column('experience_years', sa.Integer(), nullable=True),
    sa.Column('education', sqlmodel.AutoString(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('jobs', sqlmodel.AutoString(), nullable=True),
    sa.Column('languages', sqlmodel.AutoString(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('tags', sqlmodel.AutoString(), nullable=True),
    sa.Column('analysis_status', sqlmodel.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('refresh_tokens',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('token', sqlmodel.AutoString(length=255), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_refresh_tokens_token'), 'refresh_tokens', ['token'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_refresh_tokens_token'), table_name='refresh_tokens')
    op.drop_table('refresh_tokens')
    op.drop_table('cvs')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
